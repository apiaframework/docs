__NUXT_JSONP__("/documentation", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x){return {data:[{document:{slug:"documentation",description:"An opinionated framework for building APIs in Ruby.",title:"Generating docs",position:1.2,category:"Welcome",toc:[{id:p,depth:2,text:q}],body:{type:"root",children:[{type:b,tag:n,props:{},children:[{type:a,value:"Apia provides a utility that allows you to generate documentation for any API schema. The documentation is provided as a series of HTML files containing all aspects of the API. Here's an example screenshot:"}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:b,tag:"img",props:{alt:"Screenshot",src:"\u002Fscreenshots\u002Fdark-docs.png"},children:[]}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"The docs generator is provided as a container which you can run using Docker."}]},{type:a,value:e},{type:b,tag:"ol",props:{},children:[{type:a,value:e},{type:b,tag:o,props:{},children:[{type:a,value:"Place your schema file in "},{type:b,tag:k,props:{},children:[{type:a,value:"schema.json"}]},{type:a,value:"."}]},{type:a,value:e},{type:b,tag:o,props:{},children:[{type:a,value:"Create a config file called "},{type:b,tag:k,props:{},children:[{type:a,value:"config.yaml"}]},{type:a,value:" containing configuration. See example below."}]},{type:a,value:e},{type:b,tag:o,props:{},children:[{type:a,value:"Create an empty directory called "},{type:b,tag:k,props:{},children:[{type:a,value:"output"}]},{type:a,value:" that your documentation will be generated into."}]},{type:a,value:e},{type:b,tag:o,props:{},children:[{type:a,value:"Run the command below."}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:r,props:{className:[s]},children:[{type:b,tag:t,props:{className:[u,"language-text"]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"mkdir output\ndocker run \\\n    -u `id -u` \\\n    -v $(pwd)\u002Fschema.json:\u002Fconfig\u002Fschema.json \\\n    -v $(pwd)\u002Fconfig.yaml:\u002Fconfig\u002Fconfig.yaml \\\n    -v path\u002Fto\u002Foutput:\u002Foutput \\\n    ghcr.io\u002Fapiaframework\u002Fdocs-generator:latest\n"}]}]}]},{type:a,value:e},{type:b,tag:"h2",props:{id:p},children:[{type:b,tag:"a",props:{ariaHidden:"true",href:"#documentation-configuration",tabIndex:-1},children:[{type:b,tag:c,props:{className:["icon","icon-link"]},children:[]}]},{type:a,value:q}]},{type:a,value:e},{type:b,tag:n,props:{},children:[{type:a,value:"The docs generator can accept some configuration in the form of a YAML config file. There isn't much you can provide at the moment but this is an example:"}]},{type:a,value:e},{type:b,tag:r,props:{className:[s]},children:[{type:b,tag:t,props:{className:[u,"language-yaml"]},children:[{type:b,tag:k,props:{},children:[{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"# Set the address that should be used when the documentation provides"}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"# an email address."}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"support_address"}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:h}]},{type:a,value:" support@example.com\n\n"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"# If you want to prefix all scopes with something, you can do so here."}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"scope_prefix"}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:h}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,w]},children:[{type:a,value:"\"core:\""}]},{type:a,value:"\n\n"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"# Options to define how the authentication section is generated."}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"authentication"}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:h}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"# If you have an external link for docs about authenticating to the API"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"# you can provide that here."}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"external_link"}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:h}]},{type:a,value:" https"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:h}]},{type:a,value:"\u002F\u002Fdevelopers.katapult.io\u002Fapi\u002Fauthenticating\n\n  "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"# You can provide additional configuration that is only used when"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"# providing documentation for the `bearer` type of authenticator."}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"bearer"}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:h}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"# This is the placeholder that is shown where a secret should"}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"# be provided"}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"placeholder"}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:h}]},{type:a,value:" api"},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"-"}]},{type:a,value:"token\n\n    "},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"# This provides details for how the user can obtain their own"}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:"# API token\u002Fsecret."}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,i,j]},children:[{type:a,value:"obtaining_api_token"}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:h}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:"|"}]},{type:b,tag:c,props:{className:[d,"scalar",w]},children:[{type:a,value:"\n      You can generate an API token through the Widgets interface. Once you\n      have generated the token, you can use it as described below."}]},{type:a,value:e}]}]}]}]},dir:"\u002Fen",path:"\u002Fen\u002Fdocumentation",extension:".md",createdAt:x,updatedAt:x,to:"\u002Fdocumentation"},prev:{title:"Arguments",path:"\u002Fen\u002Fconcepts\u002Farguments",to:"\u002Fconcepts\u002Farguments"},next:{title:"Authentication",path:"\u002Fen\u002Fconcepts\u002Fauthentication",to:"\u002Fconcepts\u002Fauthentication"}}],fetch:{},mutations:[]}}("text","element","span","token","\n","comment","punctuation",":","key","atrule","code","\n  ","\n    ","p","li","documentation-configuration","Documentation configuration","div","nuxt-content-highlight","pre","line-numbers"," ","string","2024-03-18T17:10:17.939Z")));