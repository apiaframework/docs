__NUXT_JSONP__("/using-the-api/consuming", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C){return {data:[{document:{slug:"consuming",description:"An opinionated framework for building APIs in Ruby.",title:u,position:f,category:u,toc:[{id:v,depth:f,text:w},{id:x,depth:f,text:y},{id:z,depth:f,text:A}],body:{type:"root",children:[{type:b,tag:e,props:{},children:[{type:a,value:"This document outlines the conventions used for consuming APIs built with Apia."}]},{type:a,value:c},{type:b,tag:g,props:{id:v},children:[{type:b,tag:h,props:{ariaHidden:i,href:"#requests",tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:w}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Consumers can make requests to any resource provided by the API (and listed as a route)."}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"\u002Fapi\u002Fv1\u002Fusers\u002Flist\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"In addition to the path, requests must be made using the correct HTTP method. For example, a user list may well be implemented as a "},{type:b,tag:d,props:{},children:[{type:a,value:"GET"}]},{type:a,value:" request whereas a user creation may well be implemented to require "},{type:b,tag:d,props:{},children:[{type:a,value:"POST"}]},{type:a,value:"."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"All successful requests will respond with a 2xx status code."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Unless otherwise documented, all requests will return a JSON hash (with the "},{type:b,tag:d,props:{},children:[{type:a,value:B}]},{type:a,value:" content type)."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"To provide data to a request, there are few options - you should choose an option based on the method required for the endpoint."}]},{type:a,value:c},{type:b,tag:"ul",props:{},children:[{type:a,value:c},{type:b,tag:s,props:{},children:[{type:b,tag:t,props:{},children:[{type:a,value:"Querystring"}]},{type:a,value:" - you can provide query strings with your request (for example "},{type:b,tag:d,props:{},children:[{type:a,value:"?name=Dave"}]},{type:a,value:"). This is useful for GET or HEAD requests."}]},{type:a,value:c},{type:b,tag:s,props:{},children:[{type:b,tag:t,props:{},children:[{type:a,value:"JSON"}]},{type:a,value:" - you can provide a JSON hash in the body of the request (with the "},{type:b,tag:d,props:{},children:[{type:a,value:B}]},{type:a,value:" content type). Recommended for all non-GET\u002FHEAD requests."}]},{type:a,value:c},{type:b,tag:s,props:{},children:[{type:b,tag:t,props:{},children:[{type:a,value:"Form-encoded"}]},{type:a,value:" - you can provide form-encoded data (with the "},{type:b,tag:d,props:{},children:[{type:a,value:"application\u002Fx-www-form-urlencoded"}]},{type:a,value:" content type). If you must."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{id:x},children:[{type:b,tag:h,props:{ariaHidden:i,href:"#authentication",tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:y}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"At present, the only (documented) supported authentication mechanism for Apia APIs are using a bearer token in the "},{type:b,tag:d,props:{},children:[{type:a,value:"Authorization"}]},{type:a,value:" header. Therefore, you must include a header as shown below for each request."}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"Authorization: Bearer {supplied-api-token}\n"}]}]}]},{type:a,value:c},{type:b,tag:g,props:{id:z},children:[{type:b,tag:h,props:{ariaHidden:i,href:"#errors",tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:A}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"If a request cannot be completed for any reason you should receive a 4xx or 5xx status code. In the majority of cases, errors will contain a JSON body with details of the error (it is possible that some 502\u002F503 errors may not return JSON). Errors generated by Apia will always follow the following structure and will contain an "},{type:b,tag:d,props:{},children:[{type:a,value:"X-API-Schema: json-error"}]},{type:a,value:" header to let you know how you can pass it."}]},{type:a,value:c},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,r]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"{\n  error: {\n    code: 'example_error', # A code to describe the error\n    description: 'An example error', # A human readable description of the error\n    detail: {\n      # Contains arbitary information that may be useful for the specific\n    }\n  }\n}\n"}]}]}]}]},dir:"\u002Fen\u002Fusing-the-api",path:"\u002Fen\u002Fusing-the-api\u002Fconsuming",extension:".md",createdAt:C,updatedAt:C,to:"\u002Fusing-the-api\u002Fconsuming"},prev:{title:"Scopes",path:"\u002Fen\u002Fconcepts\u002Fscopes",to:"\u002Fconcepts\u002Fscopes"},next:{title:"Testing Endpoints",path:"\u002Fen\u002Ftesting\u002Fendpoints",to:"\u002Ftesting\u002Fendpoints"}}],fetch:{},mutations:[]}}("text","element","\n","code","p",2,"h2","a","true",-1,"span","icon","icon-link","div","nuxt-content-highlight","pre","language-text","line-numbers","li","strong","Using an API","requests","Requests","authentication","Authentication","errors","Errors","application\u002Fjson","2024-03-18T17:10:17.939Z")));