__NUXT_JSONP__("/concepts/enums", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H){return {data:[{document:{slug:"enums",description:"An opinionated framework for building APIs in Ruby.",title:"Enums",position:1.3,category:"Concepts",toc:[{id:n,depth:o,text:p},{id:q,depth:o,text:r}],body:{type:"root",children:[{type:b,tag:s,props:{},children:[{type:a,value:"Enums allow you to define a list options that might be returned for a field or provided as an argument."}]},{type:a,value:h},{type:b,tag:t,props:{id:n},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#defining-enums",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:p}]},{type:a,value:h},{type:b,tag:"div",props:{className:["nuxt-content-highlight"]},children:[{type:b,tag:"pre",props:{className:["language-ruby","line-numbers"]},children:[{type:b,tag:"code",props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"class"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,"class-name"]},children:[{type:a,value:"ExampleEnum"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"\u003C"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:"Apia"}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:A}]},{type:b,tag:c,props:{className:[d,z]},children:[{type:a,value:"Enum"}]},{type:a,value:"\n\n  name "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"'Example enum'"}]},{type:a,value:"\n  description "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"'Something to describe what this enum actually is'"}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"# Define all the possible values for this enum (along with a description if needed)"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"'active'"}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"'An active widget'"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"'suspended'"}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"'A suspended widget'"}]},{type:a,value:l},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"'inactive'"}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:m}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"'An inactive widget'"}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"# This is optional and allows you to do some processing on the value before it is"}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"# compared with the list above and returned. For example, you might want to convert"}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"# to a string and downcase the string."}]},{type:a,value:"\n  cast "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"do"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:D}]},{type:a,value:"value"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:D}]},{type:a,value:"\n    value"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:F}]},{type:a,value:"to_s"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,g]},children:[{type:a,value:F}]},{type:a,value:"downcase\n  "},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:G}]},{type:a,value:"\n\n"},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:G}]},{type:a,value:h}]}]}]},{type:a,value:h},{type:b,tag:t,props:{id:q},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#returning-enums",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:r}]},{type:a,value:h},{type:b,tag:s,props:{},children:[{type:a,value:"You don't need to do anything special when returning a value for use by an enum. Just make sure that the value you provide is included in the list of values for enum."}]}]},dir:"\u002Fen\u002Fconcepts",path:"\u002Fen\u002Fconcepts\u002Fenums",extension:".md",createdAt:H,updatedAt:H,to:"\u002Fconcepts\u002Fenums"},prev:{title:"Endpoints",path:"\u002Fen\u002Fconcepts\u002Fendpoints",to:"\u002Fconcepts\u002Fendpoints"},next:{title:"Errors",path:"\u002Fen\u002Fconcepts\u002Ferrors",to:"\u002Fconcepts\u002Ferrors"}}],fetch:{},mutations:[]}}("text","element","span","token","string"," ","punctuation","\n","operator","keyword","comment","\n  value ",",","defining-enums",2,"Defining enums","returning-enums","Returning enums","p","h2","a","true",-1,"icon","icon-link","constant",":","\n\n  ","\n  ","|","&",".","end","2024-03-18T17:10:17.939Z")));